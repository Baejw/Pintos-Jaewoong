Copying tests/userprog/wait-killed into /tmp/jALHRN39I1.dsk...
Copying tests/userprog/child-bad into /tmp/jALHRN39I1.dsk...
Writing command line to /tmp/hCR6z8xufp.dsk...
qemu -hda /tmp/hCR6z8xufp.dsk -hdb /tmp/32Qt88Z9ky.dsk -hdc /tmp/jALHRN39I1.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put wait-killed put child-bad run wait-killed
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  26,188,800 loops/s.
hd0:0: detected 137 sector (68 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 210 sector (105 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Executing 'wait-killed':
(wait-killed) begin
(child-bad) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc010b000
 cr2=20101234 error=00000000
 eax=20101234 ebx=c0122fb0 ecx=0804bfee edx=00000030
 esi=00000000 edi=00000000 esp=00000001 ebp=c0122f74
 cs=0008 ds=0010 es=0010 ss=bbe0
(wait-killed) wait(exec()) = 256
(wait-killed) end
wait-killed: exit(0)
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc01079a9 0xc010ad08 0xc010adba 0xc0101c47 0xc0101d7f 0xc010b000 0xc0101c47 0xc0101d7f 0x80480ed 0x804812c 0x804876c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 115 ticks
Thread: 30 idle ticks, 79 kernel ticks, 6 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 122 reads, 430 writes
hd1:0: 210 reads, 0 writes
Console: 1579 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
